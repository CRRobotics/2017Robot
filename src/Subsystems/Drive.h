// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef DRIVE_H
#define DRIVE_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "AHRS.h"
#define MAX_ENC_VEL 5000
#define ENC_PULSE_PER_IN 0

/**
 *
 *
 * @author ExampleAuthor
 */
class Drive: public Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	std::shared_ptr<CANTalon> rDrive1;
	std::shared_ptr<CANTalon> rDrive2;
	std::shared_ptr<CANTalon> lDrive1;
	std::shared_ptr<CANTalon> lDrive2;
	std::shared_ptr<Solenoid> gearShift;
	std::shared_ptr<AHRS> ahrs;

	double vTurnP = 0.0;
	double vTurnI = 0.0;
	double vTurnD = 0.0;
	double vTurnF = 0.0;
	double vDriveP = 0.0;
	double vDriveI = 0.0;
	double vDriveD = 0.0;
	double vDriveF = 0.0;
	double motionP = 0.0;
	double motionI = 0.0;
	double motionD = 0.0;
	double motionF = 0.0;
//	double posP = 0.0;
//	double posI = 0.0;
//	double posD = 0.0;
//	double posF = 0.0;

public:
	Drive();
	void TankDrive(double lSpeed, double rSpeed, bool speedClosed = false);
	enum class DriveControlMode{
		VelocityTurning,
		VelocityDriving,
		Voltage,
		MotionProfile
//		Position
	};
	void SetControlMode(DriveControlMode cMode);
	void ChangeGear(bool high);
	bool GetGear();
	void InitDefaultCommand();
	int GetLEncoder();
	int GetREncoder();
	double GetYaw();
	int GetLEncoderRate();
	int GetREncoderRate();
};




#endif
